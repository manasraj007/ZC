/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PersonalProfile as PrismaPersonalProfile,
} from "@prisma/client";

export class PersonalProfileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PersonalProfileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.personalProfile.count(args);
  }

  async personalProfiles(
    args: Prisma.PersonalProfileFindManyArgs
  ): Promise<PrismaPersonalProfile[]> {
    return this.prisma.personalProfile.findMany(args);
  }
  async personalProfile(
    args: Prisma.PersonalProfileFindUniqueArgs
  ): Promise<PrismaPersonalProfile | null> {
    return this.prisma.personalProfile.findUnique(args);
  }
  async createPersonalProfile(
    args: Prisma.PersonalProfileCreateArgs
  ): Promise<PrismaPersonalProfile> {
    return this.prisma.personalProfile.create(args);
  }
  async updatePersonalProfile(
    args: Prisma.PersonalProfileUpdateArgs
  ): Promise<PrismaPersonalProfile> {
    return this.prisma.personalProfile.update(args);
  }
  async deletePersonalProfile(
    args: Prisma.PersonalProfileDeleteArgs
  ): Promise<PrismaPersonalProfile> {
    return this.prisma.personalProfile.delete(args);
  }
}
